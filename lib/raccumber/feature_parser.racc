class Raccumber::FeatureParser

rule

feature : feature_title {puts val.inspect;  @result.push Feature.new  }
        | feature_title scenario_list {puts val.inspect;  @result.push Feature.new }

feature_title : FEAT_KEYWORD TEXT {puts val.inspect; }
              | FEAT_KEYWORD TEXT description {puts val.inspect; }

description: TEXT { }
           | description TEXT { }

scenario_list
  : scenario
  | scenario_list scenario

scenario 
  : SCEN_KEYWORD TEXT step_definition_list {puts val.inspect;  @result.push Scenario.new(@steps); @steps = Array.new }

step_definition_list 
  : step_definition
  | step_definition_list step_definition         

step_definition : STEP_KEYWORD TEXT {puts val.inspect;  @steps << StepDefinition.new(val[1]) }

end

---- inner ----

require 'feature'
require 'scenario'
require 'step_definition'
require 'pry'

def parse(tokens)
  @tokens = tokens
  @result = Array.new
  @steps = Array.new
  do_parse
  @result
end

def next_token
  @tokens.shift
end
